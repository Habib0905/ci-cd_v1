name: CI-CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  TF_IN_AUTOMATION: "true"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:latest ./app

      - name: Push image
        run: |
          docker push ghcr.io/${{ github.repository }}:latest

  infra:
    runs-on: ubuntu-latest
    needs: build-and-push
    outputs:
      ec2_ip: ${{ steps.tf_out.outputs.ec2_ip }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve -var="ssh_key_name=${{ secrets.EC2_KEY_NAME }}"

      - name: Capture Terraform Outputs
        id: tf_out
        working-directory: infra
        run: |
          ip=$(terraform output -raw public_ip)
          echo "ec2_ip=$ip" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: infra
    steps:
      - uses: actions/checkout@v4

      - name: Write SSH private key
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > id_rsa
          chmod 600 id_rsa

      - name: Add host to inventory
        run: |
          echo "[web]" > inventory.ini
          echo "${{ needs.infra.outputs.ec2_ip }} ansible_user=ubuntu ansible_ssh_private_key_file=./id_rsa" >> inventory.ini

      - name: Install Ansible
        run: |
          python3 -m pip install --upgrade pip
          pip install ansible

      - name: Deploy with Ansible
        working-directory: deploy/ansible
        run: |
          ansible-playbook -i ../../inventory.ini playbook.yml \
            -e ghcr_user=${{ github.actor }} \
            -e ghcr_token='${{ secrets.GHCR_TOKEN }}'
