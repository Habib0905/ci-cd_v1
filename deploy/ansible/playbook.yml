- name: Provision Dockerized Node.js with NGINX reverse proxy
  hosts: all
  become: yes
  vars:
    compose_src: "{{ playbook_dir }}/../docker-compose.yml"
    nginx_site_path: /etc/nginx/conf.d/node_app.conf
    app_internal: "http://app:3000"
  tasks:
    - name: Update apt cache (Debian/Ubuntu only)
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install dependencies (Ubuntu)
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - nginx
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Add Docker's official GPG key (Ubuntu)
      shell: |
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg
      when: ansible_distribution == "Ubuntu"

    - name: Add Docker repository (Ubuntu)
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Install Docker engine & compose plugin (Ubuntu)
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes
      when: ansible_distribution == "Ubuntu"

    - name: Enable and start Docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create NGINX site for reverse proxy
      template:
        src: templates/nginx_site.conf.j2
        dest: "{{ nginx_site_path }}"
        mode: "0644"

    - name: Reload NGINX
      service:
        name: nginx
        state: restarted

    - name: Create deploy dir
      file:
        path: /opt/deploy
        state: directory
        mode: "0755"

    - name: Copy docker-compose.yml to server
      copy:
        src: "{{ compose_src }}"
        dest: /opt/deploy/docker-compose.yml
        mode: "0644"

    - name: Login to GHCR (if private image)  # optional
      shell: |
        echo "{{ ghcr_token | default('') }}" | docker login ghcr.io -u "{{ ghcr_user | default('') }}" --password-stdin
      when: ghcr_token is defined and ghcr_user is defined

    - name: Pull latest images
      shell: docker compose pull
      args:
        chdir: /opt/deploy

    - name: Up the stack
      shell: docker compose up -d
      args:
        chdir: /opt/deploy
